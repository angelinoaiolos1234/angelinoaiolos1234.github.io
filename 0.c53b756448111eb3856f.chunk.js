webpackJsonp([0],{1599:function(n,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),a.d(t,"PagesModule",function(){return O});var e=a(2),i=a(3),o=a(14),r=a(65),s=a(228),c=a(1624),l=a(1603),d=a(1604),m=a(1605),u=a(1606),p=a(1607),f=a(1608),v=a(1609),b=a(1610),h=a(1611),y=a(1612),g=a(1613),w=a(1614),I=a(1615),C=a(1616),x=a(1617),N=a(1618),A=a(1619),k=a(1620),B=a(1621),T=a(322),O=function(){function PagesModule(){}return PagesModule=e.a([Object(i.NgModule)({imports:[o.b,r.c,s.b,s.c,s.d,s.e,s.f,s.g,s.h,s.j,s.l,s.m,s.n,s.o,s.p,s.q,s.r,s.s,s.t,s.u,s.v,s.w,s.x,s.y,s.A,s.z,s.B,s.C,s.E,s.F,s.G,s.H,s.D,c.a],declarations:[l.a,d.a,m.a,u.a,p.a,f.a,v.a,b.a,h.a,y.a,g.a,w.a,I.a,C.a,x.a,N.a,A.a,k.a,B.a],entryComponents:[B.a],providers:[T.a]})],PagesModule)}()},1603:function(n,t,a){"use strict";a.d(t,"a",function(){return o});var e=a(2),i=a(3),o=function(){function PagesComponent(){}return PagesComponent=e.a([Object(i.Component)({selector:"my-pages",styles:[],template:"<router-outlet></router-outlet>"})],PagesComponent)}()},1604:function(n,t,a){"use strict";var e=a(2),i=a(3),o=a(96),r=a(620),s=a(227),c=a(127),l=function(){function View(n,t,a,e){this.apiCompanyFind=n,this.apiBankCreate=t,this.router=a,this.session=e,this.dataCompany=null,this.formName="",this.formBeneficiaryType="INDIVIDUAL",this.formAccountType="CHECKING",this.formAccountNumber="",this.formRoutingNumber="",this.formFirstNameOnAccount="",this.formLastNameOnAccount="",this.formBeneficiaryCompanyName="",this.formBeneficiaryEinTin="",this.formBeneficiaryAddress="",this.formBeneficiaryAddress2="",this.formBeneficiaryCity="",this.formBeneficiaryPostal="",this.formBeneficiaryState="",this.formBeneficiaryPhoneNumber="",this.formBeneficiaryLandlineNumber="",this.formBeneficiaryEmailAddress="",this.formDateOfBeneficiary=new Date}return View.prototype.ngOnInit=function(){var n=this;this.apiCompanyFind.exec({id:this.session.user.company}).subscribe(function(t){n.dataCompany=t[0]},function(n){})},View.prototype.submit=function(){var n=this;this.apiBankCreate.exec({name:this.formName,company:this.dataCompany.id,beneficiaryType:this.formBeneficiaryType,accountType:this.formAccountType,accountNumber:this.formAccountNumber,routingNumber:this.formRoutingNumber,firstNameOnAccount:this.formFirstNameOnAccount,lastNameOnAccount:this.formLastNameOnAccount,beneficiaryCompanyName:this.formBeneficiaryCompanyName,beneficiaryEinTin:this.formBeneficiaryEinTin,beneficiaryAddress:this.formBeneficiaryAddress,beneficiaryAddress2:this.formBeneficiaryAddress2,beneficiaryCity:this.formBeneficiaryCity,beneficiaryPostal:this.formBeneficiaryPostal,beneficiaryState:this.formBeneficiaryState,beneficiaryPhoneNumber:this.formBeneficiaryPhoneNumber,beneficiaryLandlineNumber:this.formBeneficiaryLandlineNumber,beneficiaryEmailAddress:this.formBeneficiaryEmailAddress,beneficiaryDobDay:this.formDateOfBeneficiary.getDate().toString(),beneficiaryDobMonth:(this.formDateOfBeneficiary.getMonth()+1).toString(),beneficiaryDobYear:this.formDateOfBeneficiary.getFullYear().toString()}).subscribe(function(t){n.router.navigate(["/app/page/bank"])},function(n){})},View=e.a([Object(i.Component)({selector:"my-page-bank-add",template:a(1625)}),e.c("design:paramtypes",[s.a,r.a,o.f,c.a])],View)}();t.a=l},1605:function(n,t,a){"use strict";var e=a(2),i=a(3),o=a(615),r=function(){function View(n){this.apiBankFind=n}return View.prototype.ngOnInit=function(){var n=this;this.apiBankFind.exec({}).subscribe(function(t){n.data=t},function(n){})},View=e.a([Object(i.Component)({selector:"my-page-bank-list",template:a(1626)}),e.c("design:paramtypes",[o.a])],View)}();t.a=r},1606:function(n,t,a){"use strict";var e=a(2),i=a(3),o=a(96),r=a(615),s=a(621),c=function(){function View(n,t,a){this.route=n,this.apiBankFind=t,this.apiSwPaymentMethods=a,this.data=null,this.paramsId=null}return View.prototype.ngOnInit=function(){var n=this;this.route.params.subscribe(function(t){n.paramsId=t.id,n.apiBankFind.exec({id:n.paramsId}).subscribe(function(t){n.data=t[0]},function(n){})})},View.prototype.link=function(){this.apiSwPaymentMethods.exec({bank:this.paramsId}).subscribe(function(n){console.log(n)},function(n){})},View=e.a([Object(i.Component)({selector:"my-page-bank-view",template:a(1627)}),e.c("design:paramtypes",[o.a,r.a,s.a])],View)}();t.a=c},1607:function(n,t,a){"use strict";var e=a(2),i=a(3),o=a(96),r=a(622),s=function(){function View(n,t){this.apiCompanyCreate=n,this.router=t}return View.prototype.submit=function(){var n=this;this.apiCompanyCreate.exec({name:this.name}).subscribe(function(t){n.router.navigate(["/app/page/company"])},function(n){})},View=e.a([Object(i.Component)({selector:"my-page-company-add",template:a(1628)}),e.c("design:paramtypes",[r.a,o.f])],View)}();t.a=s},1608:function(n,t,a){"use strict";var e=a(2),i=a(3),o=a(227),r=function(){function View(n){this.apiCompanyFind=n}return View.prototype.ngOnInit=function(){var n=this;this.apiCompanyFind.exec({}).subscribe(function(t){n.companyList=t},function(n){})},View=e.a([Object(i.Component)({selector:"my-page-company",template:a(1629)}),e.c("design:paramtypes",[o.a])],View)}();t.a=r},1609:function(n,t,a){"use strict";var e=a(2),i=a(3),o=a(96),r=a(227),s=function(){function PageCompanyViewComponent(n,t,a){this.apiCompanyFind=n,this.route=t,this.router=a}return PageCompanyViewComponent.prototype.ngOnInit=function(){var n=this;this.route.params.subscribe(function(t){n.companyId=t.id,n.apiCompanyFind.exec({id:t.id}).subscribe(function(t){var a=t[0];void 0!==a&&(n.name=a.name)},function(n){})})},PageCompanyViewComponent=e.a([Object(i.Component)({selector:"my-page-company-view",template:a(1630)}),e.c("design:paramtypes",[r.a,o.a,o.f])],PageCompanyViewComponent)}();t.a=s},1610:function(n,t,a){"use strict";var e=a(2),i=a(3),o=a(96),r=a(615),s=a(623),c=a(127),l=function(){function View(n,t,a,e){this.apiBankFind=n,this.apiPaymentCreate=t,this.router=a,this.session=e,this.formAmount=50,this.formBank=null}return View.prototype.ngOnInit=function(){var n=this;this.apiBankFind.exec({company:this.session.user.company}).subscribe(function(t){n.dataBankList=t},function(n){})},View.prototype.submit=function(){var n=this;this.apiPaymentCreate.exec({bank:this.formBank,amount:this.formAmount}).subscribe(function(t){n.router.navigate(["/app/page/payment"])},function(n){})},View=e.a([Object(i.Component)({selector:"my-page-payment-add",template:a(1631)}),e.c("design:paramtypes",[r.a,s.a,o.f,c.a])],View)}();t.a=l},1611:function(n,t,a){"use strict";var e=a(2),i=a(3),o=a(616),r=function(){function View(n){this.apiPaymentFind=n}return View.prototype.ngOnInit=function(){var n=this;this.apiPaymentFind.exec({}).subscribe(function(t){n.data=t},function(n){})},View=e.a([Object(i.Component)({selector:"my-page-payment-list",template:a(1632)}),e.c("design:paramtypes",[o.a])],View)}();t.a=r},1612:function(n,t,a){"use strict";var e=a(2),i=a(3),o=a(96),r=a(616),s=function(){function View(n,t){this.route=n,this.apiPaymentFind=t,this.data=null,this.dataBankAddress=null,this.dataBeneficiaryAddress=null,this.dataIntermediaryBank=null,this.paramsId=null}return View.prototype.ngOnInit=function(){var n=this;this.route.params.subscribe(function(t){n.paramsId=t.id,n.apiPaymentFind.exec({id:n.paramsId}).subscribe(function(t){n.data=t[0],n.dataBankAddress=n.data.paymentTransfer.chargeInfo.wireDetails.bankAddress.replace(/<br \/> ?/g,"\n"),n.dataBeneficiaryAddress=n.data.paymentTransfer.chargeInfo.wireDetails.beneficiaryAddress.replace(/<br \/> ?/g,"\n"),n.dataIntermediaryBank=n.data.paymentTransfer.chargeInfo.wireDetails.intermediaryBank.replace(/<br \/> ?/g,"\n")},function(n){})})},View=e.a([Object(i.Component)({selector:"my-page-payment-view",template:a(1633)}),e.c("design:paramtypes",[o.a,r.a])],View)}();t.a=s},1613:function(n,t,a){"use strict";var e=a(2),i=a(3),o=a(96),r=a(227),s=a(624),c=a(127),l=function(){function View(n,t,a,e,i){this.apiCompanyFind=n,this.apiProviderCreate=t,this.route=a,this.router=e,this.session=i,this.company=null,this.formAccountNumber=null,this.formBeneficiaryType=null,this.formClabe=null,this.formFirstName="",this.formLastName="",this.formBeneficiaryName="",this.uiError=!1,this.uiWaiting=!1}return View.prototype.ngOnInit=function(){var n=this;this.apiCompanyFind.exec({id:this.session.user.company}).subscribe(function(t){n.company=t[0]},function(n){}),this.route.queryParams.subscribe(function(t){n.formBeneficiaryType=t.type})},View.prototype.formBeneficiaryTypeChanged=function(n){this.router.navigate([],{queryParams:{type:n},replaceUrl:!0})},View.prototype.submit=function(){var n=this;switch(this.formBeneficiaryType){case"CORPORATE":var t=this.formBeneficiaryName;break;case"INDIVIDUAL":var t=this.formFirstName+" "+this.formLastName}this.apiProviderCreate.exec({accountNumber:this.formAccountNumber,beneficiaryType:this.formBeneficiaryType,clabe:this.formClabe,company:this.company.id,country:"MX",firstName:this.formFirstName,lastName:this.formLastName,beneficiaryName:this.formBeneficiaryName,name:t}).subscribe(function(t){var i=a-(Date.now()-e);setTimeout(function(){n.router.navigate(["/app/page/provider"])},i>0?i:0)},function(t){var i=a-(Date.now()-e);setTimeout(function(){n.uiError=!0,n.uiWaiting=!1},i>0?i:0)});var a=1e3,e=Date.now();this.uiWaiting=!0},View=e.a([Object(i.Component)({selector:"my-page-provider-add",template:a(1634)}),e.c("design:paramtypes",[r.a,s.a,o.a,o.f,c.a])],View)}();t.a=l},1614:function(n,t,a){"use strict";var e=a(2),i=a(3),o=a(96),r=a(617),s=a(625),c=function(){function View(n,t,a,e){this.apiProviderFindOne=n,this.apiProviderUpdate=t,this.route=a,this.router=e,this.data=null,this.dataId="",this.formAccountNumber="",this.formBeneficiaryType="",this.formClabe="",this.formFirstName="",this.formLastName="",this.formBeneficiaryName="",this.uiError=!1,this.uiWaiting=!1}return View.prototype.ngOnInit=function(){var n=this;this.route.params.subscribe(function(t){n.apiProviderFindOne.exec({id:t.id}).subscribe(function(t){n.data=t,n.dataId=t.id,n.formAccountNumber=t.accountNumber,n.formClabe=t.clabe,n.formBeneficiaryName=t.beneficiaryName,n.formBeneficiaryType=t.beneficiaryType,n.formFirstName=t.firstName,n.formLastName=t.lastName,n.formBeneficiaryName=t.beneficiaryName},function(n){})})},View.prototype.submit=function(){var n=this;switch(this.formBeneficiaryType){case"CORPORATE":var t=this.formBeneficiaryName;break;case"INDIVIDUAL":var t=this.formFirstName+" "+this.formLastName}this.apiProviderUpdate.exec(this.dataId,{accountNumber:this.formAccountNumber,beneficiaryType:this.formBeneficiaryType,clabe:this.formClabe,country:"MX",firstName:this.formFirstName,lastName:this.formLastName,beneficiaryName:this.formBeneficiaryName,name:t}).subscribe(function(t){var i=a-(Date.now()-e);setTimeout(function(){n.router.navigate(["/app/page/provider/view/"+n.data.id])},i>0?i:0)},function(t){var i=a-(Date.now()-e);setTimeout(function(){n.uiError=!0,n.uiWaiting=!1},i>0?i:0)});var a=1e3,e=Date.now();this.uiWaiting=!0},View=e.a([Object(i.Component)({selector:"my-page-provider-edit",template:a(1635)}),e.c("design:paramtypes",[r.a,s.a,o.a,o.f])],View)}();t.a=c},1615:function(n,t,a){"use strict";var e=a(2),i=a(3),o=a(96),r=a(323),s=function(){function View(n,t){this.apiProviderFind=n,this.router=t,this.dataProviders=null}return View.prototype.ngOnInit=function(){var n=this;this.apiProviderFind.exec({}).subscribe(function(t){n.dataProviders=t},function(n){})},View.prototype.addBusiness=function(){this.router.navigate(["/app/page/provider/add"],{queryParams:{type:"CORPORATE"}})},View.prototype.addIndividual=function(){this.router.navigate(["/app/page/provider/add"],{queryParams:{type:"INDIVIDUAL"}})},View=e.a([Object(i.Component)({selector:"my-page-provider-list",template:a(1636)}),e.c("design:paramtypes",[r.a,o.f])],View)}();t.a=s},1616:function(n,t,a){"use strict";var e=a(2),i=a(3),o=a(96),r=a(617),s=function(){function View(n,t){this.apiProviderFindOne=n,this.route=t,this.data=null,this.dataId=""}return View.prototype.ngOnInit=function(){var n=this;this.route.params.subscribe(function(t){n.apiProviderFindOne.exec({id:t.id}).subscribe(function(t){n.data=t,n.dataId=t.id},function(n){})})},View=e.a([Object(i.Component)({selector:"my-page-provider-view",template:a(1637)}),e.c("design:paramtypes",[r.a,o.a])],View)}();t.a=s},1617:function(n,t,a){"use strict";a.d(t,"a",function(){return r});var e=a(2),i=a(3),o=a(618),r=function(){function PageUsersComponent(n){this.userFindService=n}return PageUsersComponent.prototype.ngOnInit=function(){var n=this;this.userFindService.exec({}).subscribe(function(t){n.userList=t},function(n){})},PageUsersComponent=e.a([Object(i.Component)({selector:"my-page-users",template:a(1638)}),e.c("design:paramtypes",[o.a])],PageUsersComponent)}()},1618:function(n,t,a){"use strict";var e=a(2),i=a(3),o=a(96),r=a(227),s=a(626),c=function(){function PageUsersAddComponent(n,t,a){this.apiCompanyFind=n,this.apiUserCreate=t,this.router=a}return PageUsersAddComponent.prototype.ngOnInit=function(){var n=this;this.apiCompanyFind.exec({}).subscribe(function(t){n.dataCompanies=t},function(n){})},PageUsersAddComponent.prototype.submit=function(){var n=this;this.apiUserCreate.exec({company:this.formCompany,email:this.formEmail,password:this.formPassword}).subscribe(function(t){n.router.navigate(["/app/page/users"])},function(n){})},PageUsersAddComponent=e.a([Object(i.Component)({selector:"my-page-users-add",template:a(1639)}),e.c("design:paramtypes",[r.a,s.a,o.f])],PageUsersAddComponent)}();t.a=c},1619:function(n,t,a){"use strict";var e=a(2),i=a(3),o=a(96),r=a(627),s=a(618),c=function(){function PageUsersViewComponent(n,t,a,e){this.route=n,this.router=t,this.userDestroyService=a,this.userFindService=e}return PageUsersViewComponent.prototype.ngOnInit=function(){var n=this;this.route.params.subscribe(function(t){n.userId=t.id,n.userFindService.exec({id:t.id}).subscribe(function(t){var a=t[0];void 0!==a&&(n.email=a.email,n.password=a.password)},function(n){})})},PageUsersViewComponent.prototype.deleteUser=function(){var n=this;this.userDestroyService.exec({id:this.userId}).subscribe(function(t){n.router.navigate(["/app/page/users"])},function(n){})},PageUsersViewComponent=e.a([Object(i.Component)({selector:"my-page-users-view",template:a(1640)}),e.c("design:paramtypes",[o.a,o.f,r.a,s.a])],PageUsersViewComponent)}();t.a=c},1620:function(n,t,a){"use strict";var e=a(2),i=a(3),o=a(228),r=a(227),s=a(1621),c=function(){function View(n,t){this.apiCompanyFind=n,this.dialog=t,this.formAmount=10}return View.prototype.ngOnInit=function(){var n=this;this.apiCompanyFind.exec({}).subscribe(function(t){n.dataCompanies=t},function(n){})},View.prototype.submit=function(){var n=this;this.dialog.open(s.a,{data:{amount:this.formAmount,company:this.formDestination,destination:this.dataCompanies.find(function(t){return t.id===n.formDestination}).wallet.id}}).afterClosed().subscribe(function(n){})},View=e.a([Object(i.Component)({selector:"my-page-wallet-list",template:a(1642)}),e.c("design:paramtypes",[r.a,o.i])],View)}();t.a=c},1621:function(n,t,a){"use strict";var e=a(2),i=a(3),o=a(228),r=a(324),s=a(628),c=function(){function View(n,t,a,e){this.apiSwConfirm=n,this.apiSwTransfer=t,this.dialogRef=a,this.data=e}return View.prototype.ngOnInit=function(){var n=this;this.data.destCurrency,this.data.destAmount;this.apiSwTransfer.run({currency:"USD",amount:this.data.amount,wallet:this.data.destination,company:this.data.company}).subscribe(function(t){n.quote={sw:t}},function(n){})},View.prototype.confirm=function(){var n=this,t={id:this.quote.sw.id};this.quote.confirm={},this.apiSwConfirm.run(t).subscribe(function(t){n.quote.confirm.sw=t},function(n){})},View=e.a([Object(i.Component)({selector:"my-page-wallet-list-transfer-dialog",template:a(1641)}),e.d(3,Object(i.Inject)(o.a)),e.c("design:paramtypes",[r.a,s.a,o.k,Object])],View)}();t.a=c},1624:function(n,t,a){"use strict";a.d(t,"a",function(){return N});var e=a(96),i=a(1603),o=a(1604),r=a(1605),s=a(1606),c=a(1607),l=a(1608),d=a(1609),m=a(1610),u=a(1611),p=a(1612),f=a(1613),v=a(1614),b=a(1615),h=a(1616),y=a(1617),g=a(1618),w=a(1619),I=a(1620),C=a(322),x=[{path:"",component:i.a,children:[{path:"",redirectTo:"/app/dashboard",pathMatch:"full"},{path:"bank",component:r.a,canActivate:[C.a]},{path:"bank/add",component:o.a,canActivate:[C.a]},{path:"bank/view/:id",component:s.a,canActivate:[C.a]},{path:"company",component:l.a,canActivate:[C.a]},{path:"company/add",component:c.a,canActivate:[C.a]},{path:"company/view/:id",component:d.a,canActivate:[C.a]},{path:"payment",component:u.a,canActivate:[C.a]},{path:"payment/add",component:m.a,canActivate:[C.a]},{path:"payment/view/:id",component:p.a,canActivate:[C.a]},{path:"provider",component:b.a,canActivate:[C.a]},{path:"provider/add",component:f.a,canActivate:[C.a]},{path:"provider/edit/:id",component:v.a,canActivate:[C.a]},{path:"provider/view/:id",component:h.a,canActivate:[C.a]},{path:"users",component:y.a,canActivate:[C.a]},{path:"users/add",component:g.a,canActivate:[C.a]},{path:"users/view/:id",component:w.a,canActivate:[C.a]},{path:"wallet",component:I.a,canActivate:[C.a]}]}],N=e.g.forChild(x)},1625:function(n,t){n.exports='<div class="container-fluid no-breadcrumbs">\n\n  <article class="article">\n    <div>\n      <button mat-icon-button [routerLink]="[\'/app/page/bank\']" style="vertical-align:super">\n        <mat-icon class="material-icons">arrow_back</mat-icon>\n      </button>\n      <h2 class="article-title" style="display:inline-block">Create bank account</h2>\n    </div>\n    <div class="box box-default">\n      <div class="box-body">\n        <form #f="ngForm" (ngSubmit)="submit()">\n\n          <div class="form-group row">\n            <div class="col-4">\n              <mat-input-container class="full-width">\n                <input name="name" matInput [(ngModel)]="formName" placeholder="Name" required>\n              </mat-input-container>\n            </div>\n            <div class="col-4">\n              <mat-input-container class="full-width">\n                <mat-select name="accountType" [(ngModel)]="formAccountType" placeholder="Account type" required>\n                  <mat-option value="CHECKING">Checking</mat-option>\n                  <mat-option value="SAVINGS">Savings</mat-option>\n                </mat-select>\n              </mat-input-container>\n            </div>\n            <div class="col-4">\n              <mat-input-container class="full-width">\n                <mat-select name="type" [(ngModel)]="formBeneficiaryType" placeholder="Beneficiary type" required>\n                  <mat-option value="INDIVIDUAL">Individual</mat-option>\n                  <mat-option value="CORPORATE">Corporate</mat-option>\n                </mat-select>\n              </mat-input-container>\n            </div>\n          </div>\n\n          <div class="form-group row">\n            <div class="col-6">\n              <mat-input-container class="full-width">\n                <input name="accountNumber" matInput [(ngModel)]="formAccountNumber" placeholder="Account number" required>\n              </mat-input-container>\n            </div>\n            <div class="col-6">\n              <mat-input-container class="full-width">\n                <input name="routingNumber" matInput [(ngModel)]="formRoutingNumber" placeholder="Routing number" required>\n              </mat-input-container>\n            </div>\n          </div>\n\n          <div class="form-group row" *ngIf="formBeneficiaryType == \'INDIVIDUAL\'">\n            <div class="col-4">\n              <mat-input-container class="full-width">\n                <input name="firstNameOnAccount" matInput [(ngModel)]="formFirstNameOnAccount" placeholder="First name on account" required>\n              </mat-input-container>\n            </div>\n            <div class="col-4">\n              <mat-input-container class="full-width">\n                <input name="lastNameOnAccount" matInput [(ngModel)]="formLastNameOnAccount" placeholder="Last name on account" required>\n              </mat-input-container>\n            </div>\n            <div class="col-4">\n              <mat-input-container class="full-width">\n                <input matInput name="dateOfBeneficiary" [matDatepicker]="picker" [(ngModel)]="formDateOfBeneficiary" placeholder="Date of birth" required>\n                <mat-datepicker-toggle matSuffix [for]="picker"></mat-datepicker-toggle>\n                <mat-datepicker #picker></mat-datepicker>\n              </mat-input-container>\n            </div>\n          </div>\n\n          <div class="form-group row" *ngIf="formBeneficiaryType == \'CORPORATE\'">\n            <div class="col-4">\n              <mat-input-container class="full-width">\n                <input name="beneficiaryCompanyName" matInput [(ngModel)]="formBeneficiaryCompanyName" placeholder="Beneficiary Company Name" required>\n              </mat-input-container>\n            </div>\n            <div class="col-4">\n              <mat-input-container class="full-width">\n                <input name="beneficiaryEinTin" matInput [(ngModel)]="formBeneficiaryEinTin" placeholder="Beneficiary EIN TIN" required>\n              </mat-input-container>\n            </div>\n            <div class="col-4">\n              <mat-input-container class="full-width">\n                <input matInput name="dateOfBeneficiary" [matDatepicker]="picker" [(ngModel)]="formDateOfBeneficiary" placeholder="Date of incorporation" required>\n                <mat-datepicker-toggle matSuffix [for]="picker"></mat-datepicker-toggle>\n                <mat-datepicker #picker></mat-datepicker>\n              </mat-input-container>\n            </div>\n          </div>\n\n          <div class="form-group row">\n            <div class="col-6">\n              <mat-input-container class="full-width">\n                <input name="beneficiaryAddress" matInput [(ngModel)]="formBeneficiaryAddress" placeholder="Address" required>\n              </mat-input-container>\n            </div>\n            <div class="col-6">\n              <mat-input-container class="full-width">\n                <input name="beneficiaryAddress2" matInput [(ngModel)]="formBeneficiaryAddress2" placeholder="Address 2">\n              </mat-input-container>\n            </div>\n          </div>\n\n          <div class="form-group row">\n            <div class="col-4">\n              <mat-input-container class="full-width">\n                <input name="beneficiaryCity" matInput [(ngModel)]="formBeneficiaryCity" placeholder="City" required>\n              </mat-input-container>\n            </div>\n            <div class="col-4">\n              <mat-input-container class="full-width">\n                <input name="beneficiaryState" matInput [(ngModel)]="formBeneficiaryState" placeholder="State" required>\n              </mat-input-container>\n            </div>\n            <div class="col-4">\n              <mat-input-container class="full-width">\n                <input name="beneficiaryPostal" matInput [(ngModel)]="formBeneficiaryPostal" placeholder="Postal" required>\n              </mat-input-container>\n            </div>\n          </div>\n\n          <div class="form-group row">\n            <div class="col-4">\n              <mat-input-container class="full-width">\n                <input name="beneficiaryPhoneNumber" matInput [(ngModel)]="formBeneficiaryPhoneNumber" placeholder="Phone #" [required]="formBeneficiaryType == \'INDIVIDUAL\'">\n              </mat-input-container>\n            </div>\n            <div class="col-4">\n              <mat-input-container class="full-width">\n                <input name="beneficiaryLandlineNumber" matInput [(ngModel)]="formBeneficiaryLandlineNumber" placeholder="Landline #" [required]="formBeneficiaryType == \'CORPORATE\'">\n              </mat-input-container>\n            </div>\n            <div class="col-4">\n              <mat-input-container class="full-width">\n                <input name="beneficiaryEmailAddress" matInput [(ngModel)]="formBeneficiaryEmailAddress" placeholder="Email address">\n              </mat-input-container>\n            </div>\n          </div>\n\n          <div class="form-group row">\n            <div class="col-12 text-right">\n              <button [disabled]="!f.valid" color="primary" mat-raised-button>Create bank account</button>\n            </div>\n          </div>\n\n        </form>\n      </div>\n    </div>\n  </article>\n\n</div>'},1626:function(n,t){n.exports=' <div class="container-fluid no-breadcrumbs page-users">\n\n  <article class="article">\n    <div class="row">\n      <div class="col-6">\n        <h2 class="article-title">Bank accounts</h2>\n      </div>\n      <div class="col-6 text-right">\n        <button mat-fab color="primary" [routerLink]="[\'/app/page/bank/add\']" style="position:relative;top:16px;right:8px;z-index:1">\n          <mat-icon class="material-icons">add</mat-icon>\n        </button>\n      </div>\n    </div>\n    <div class="box box-default table-box mdl-shadow--2dp">\n      <table class="mdl-data-table">\n        <thead>\n          <tr>\n            <th class="mdl-data-table__cell--non-numeric">Id</th>\n            <th class="mdl-data-table__cell--non-numeric">Name</th>\n            <th></th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor="let i of data">\n            <td class="mdl-data-table__cell--non-numeric">{{i.id}}</td>\n            <td class="mdl-data-table__cell--non-numeric">{{i.name}}</td>\n            <td>\n              <a [routerLink]="[\'/app/page/bank/view/\'+i.id]">OPEN</a>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </article>\n\n</div>'},1627:function(n,t){n.exports='<div class="container-fluid no-breadcrumbs" *ngIf="data">\n\n  <article class="article">\n    <div style="position:relative">\n      <button mat-icon-button [routerLink]="[\'/app/page/bank\']" style="vertical-align:super">\n        <mat-icon class="material-icons">arrow_back</mat-icon>\n      </button>\n      <h2 class="article-title" flex style="display:inline-block">{{data.name}}</h2>\n      <button mat-fab [matMenuTriggerFor]="menu" style="position:absolute;top:16px;right:8px;z-index:1">\n        <mat-icon class="material-icons">more_vert</mat-icon>\n      </button>\n      <mat-menu #menu="matMenu" x-position="after" y-position="below" overlapTrigger="false">\n        <mat-list>\n          <mat-list-item color="warn" (click)="link()" style="cursor:pointer">\n            <mat-icon mat-list-icon>account_balance_wallet</mat-icon>\n            <h4 mat-line>Link to enable transfers</h4>\n          </mat-list-item>\n        </mat-list>\n      </mat-menu>\n    </div>\n    <div class="box box-default">\n      <div class="box-body">\n        <form>\n\n          <div class="form-group row">\n            <div class="col-6">\n              <mat-input-container class="full-width">\n                <input name="name" matInput [(ngModel)]="data.name" readonly placeholder="Name">\n              </mat-input-container>\n            </div>\n            <div class="col-6">\n              <mat-input-container class="full-width">\n                <input name="accountType" matInput [(ngModel)]="data.accountType" readonly placeholder="Account type">\n              </mat-input-container>\n            </div>\n          </div>\n\n        </form>\n      </div>\n    </div>\n  </article>\n\n</div>'},1628:function(n,t){n.exports=' <div class="container-fluid no-breadcrumbs">\n\n  <article class="article">\n    <div>\n      <button mat-icon-button [routerLink]="[\'/app/page/company\']" style="vertical-align:super">\n        <mat-icon class="material-icons">arrow_back</mat-icon>\n      </button>\n      <h2 class="article-title" style="display:inline-block">Create company</h2>\n    </div>\n    <div class="box box-default">\n      <div class="box-body">\n        <form (ngSubmit)="submit()">\n\n          <div class="form-group row">\n            <div class="col-12">\n              <mat-input-container class="full-width">\n                <input name="email" matInput [(ngModel)]="name" placeholder="Company name">\n              </mat-input-container>\n            </div>\n          </div>\n\n          <div class="form-group row">\n            <div class="col-12 text-right">\n              <button color="primary" mat-raised-button>Create company</button>\n            </div>\n          </div>\n\n        </form>\n      </div>\n    </div>\n  </article>\n\n</div>'},1629:function(n,t){n.exports=' <div class="container-fluid no-breadcrumbs page-users">\n\n  <article class="article">\n    <div class="row">\n      <div class="col-6">\n        <h2 class="article-title">Companies</h2>\n      </div>\n      <div class="col-6 text-right">\n        <button mat-fab color="primary" [routerLink]="[\'/app/page/company/add\']" style="position:relative;top:16px;right:8px;z-index:1">\n          <mat-icon class="material-icons">add</mat-icon>\n        </button>\n      </div>\n    </div>\n    <div class="box box-default table-box mdl-shadow--2dp">\n      <table class="mdl-data-table">\n        <thead>\n          <tr>\n            <th class="mdl-data-table__cell--non-numeric">Id</th>\n            <th class="mdl-data-table__cell--non-numeric">Name</th>\n            <th class="mdl-data-table__cell--non-numeric">Wallet</th>\n            <th></th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor="let company of companyList">\n            <td class="mdl-data-table__cell--non-numeric">{{company.id}}</td>\n            <td class="mdl-data-table__cell--non-numeric">{{company.name}}</td>\n            <td class="mdl-data-table__cell--non-numeric">{{company.wallet?company.wallet.id:\'\'}}</td>\n            <td>\n              <a [routerLink]="[\'/app/page/company/view/\'+company.id]">OPEN</a>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </article>\n\n</div>'},1630:function(n,t){n.exports=' <div class="container-fluid no-breadcrumbs">\n\n  <article class="article">\n    <div style="position:relative">\n      <button mat-icon-button [routerLink]="[\'/app/page/company\']" style="vertical-align:super">\n        <mat-icon class="material-icons">arrow_back</mat-icon>\n      </button>\n      <h2 class="article-title" flex style="display:inline-block">{{name}}</h2>\n    </div>\n    <div class="box box-default">\n      <div class="box-body">\n        <form>\n\n          <div class="form-group row">\n            <div class="col-12">\n              <mat-input-container class="full-width">\n                <input name="name" matInput [(ngModel)]="name" readonly placeholder="Name">\n              </mat-input-container>\n            </div>\n          </div>\n\n        </form>\n      </div>\n    </div>\n  </article>\n\n</div>'},1631:function(n,t){n.exports='<div class="container-fluid no-breadcrumbs">\n\n  <article class="article">\n    <div>\n      <button mat-icon-button [routerLink]="[\'/app/page/payment\']" style="vertical-align:super">\n        <mat-icon class="material-icons">arrow_back</mat-icon>\n      </button>\n      <h2 class="article-title" style="display:inline-block">Create payment receipt</h2>\n    </div>\n    <div class="box box-default">\n      <div class="box-body">\n        <form #f="ngForm" (ngSubmit)="submit()">\n\n          <div class="form-group row">\n            <div class="col-6">\n              <mat-input-container class="full-width">\n                <mat-select name="bank" [(ngModel)]="formBank" placeholder="Bank" required>\n                  <mat-option *ngFor="let i of dataBankList" [value]="i.id">\n                    {{i.name}}\n                  </mat-option>\n                </mat-select>\n              </mat-input-container>\n            </div>\n            <div class="col-6">\n              <mat-input-container class="full-width">\n                <input name="amount" matInput [(ngModel)]="formAmount" placeholder="Amount" required>\n              </mat-input-container>\n            </div>\n          </div>\n\n          <div class="form-group row">\n            <div class="col-12 text-right">\n              <button [disabled]="!f.valid" color="primary" mat-raised-button>Create payment receipt</button>\n            </div>\n          </div>\n\n        </form>\n      </div>\n    </div>\n  </article>\n\n</div>'},1632:function(n,t){n.exports=' <div class="container-fluid no-breadcrumbs page-users">\n\n  <article class="article">\n    <div class="row">\n      <div class="col-6">\n        <h2 class="article-title">Wire transfers</h2>\n      </div>\n      <div class="col-6 text-right">\n        <button mat-fab color="primary" [routerLink]="[\'/app/page/payment/add\']" style="position:relative;top:16px;right:8px;z-index:1">\n          <mat-icon class="material-icons">add</mat-icon>\n        </button>\n      </div>\n    </div>\n    <div class="box box-default table-box mdl-shadow--2dp">\n      <table class="mdl-data-table">\n        <thead>\n          <tr>\n            <th class="mdl-data-table__cell--non-numeric">Id</th>\n            <th class="mdl-data-table__cell--non-numeric">Amount</th>\n            <th class="mdl-data-table__cell--non-numeric">Bank account</th>\n            <th class="mdl-data-table__cell--non-numeric">Created at</th>\n            <th></th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor="let i of data">\n            <td class="mdl-data-table__cell--non-numeric">{{i.id}}</td>\n            <td>{{i.amount}}</td>\n            <td>{{i.bank.name}}</td>\n            <td class="mdl-data-table__cell--non-numeric">{{i.createdAt | date:\'medium\'}}</td>\n            <td>\n              <a [routerLink]="[\'/app/page/payment/view/\'+i.id]">OPEN</a>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </article>\n\n</div>'},1633:function(n,t){n.exports='<div class="container-fluid no-breadcrumbs" *ngIf="data">\n\n  <article class="article">\n    <div style="position:relative">\n      <button mat-icon-button [routerLink]="[\'/app/page/payment\']" style="vertical-align:super">\n        <mat-icon class="material-icons">arrow_back</mat-icon>\n      </button>\n      <h2 class="article-title" flex style="display:inline-block">Wire deposit instructions</h2>\n    </div>\n    <div class="box box-default">\n      <div class="box-body">\n\n        <div class="callout callout-success">\n          <h4>Wire amount: {{data.paymentTransfer.chargeInfo.amount | currency:\'USD\':\'symbol-narrow\':\'1.2-2\'}}</h4>\n          <p [innerHTML]="data.paymentTransfer.chargeInfo.wireDetails.instructions"></p>\n        </div>\n\n        <div class="form-group row">\n          <div class="col-4">\n            <mat-input-container class="full-width">\n              <input matInput placeholder="ABA number" readonly [value]="data.paymentTransfer.chargeInfo.wireDetails.abaNumber">\n            </mat-input-container>\n          </div>\n          <div class="col-4">\n            <mat-input-container class="full-width">\n              <input matInput placeholder="Account number" readonly [value]="data.paymentTransfer.chargeInfo.wireDetails.accountNumber">\n            </mat-input-container>\n          </div>\n          <div class="col-4">\n            <mat-input-container class="full-width">\n              <input matInput placeholder="Routing number" readonly [value]="data.paymentTransfer.chargeInfo.wireDetails.routingNumber">\n            </mat-input-container>\n          </div>\n        </div>\n\n        <div class="form-group row">\n          <div class="col-4">\n            <mat-input-container class="full-width">\n              <input matInput placeholder="Bank phone" readonly [value]="data.paymentTransfer.chargeInfo.wireDetails.bankPhone">\n            </mat-input-container>\n          </div>\n          <div class="col-4">\n            <mat-input-container class="full-width">\n              <input matInput placeholder="Branch code" readonly [value]="data.paymentTransfer.chargeInfo.wireDetails.branchCode">\n            </mat-input-container>\n          </div>\n          <div class="col-4">\n            <mat-input-container class="full-width">\n              <input matInput placeholder="SWIFT code" readonly [value]="data.paymentTransfer.chargeInfo.wireDetails.swiftCode">\n            </mat-input-container>\n          </div>\n        </div>\n\n        <div class="form-group row">\n          <div class="col-6">\n            <mat-input-container class="full-width">\n              <textarea matInput placeholder="Bank address" readonly rows="3" [value]="dataBankAddress"></textarea>\n            </mat-input-container>\n          </div>\n          <div class="col-6">\n            <mat-input-container class="full-width">\n              <textarea matInput placeholder="Intermediary bank" readonly rows="3" [value]="dataIntermediaryBank"></textarea>\n            </mat-input-container>\n          </div>\n        </div>\n\n        <div class="form-group row">\n          <div class="col-6">\n            <mat-input-container class="full-width">\n              <input matInput placeholder="City" readonly [value]="data.paymentTransfer.chargeInfo.wireDetails.city">\n            </mat-input-container>\n          </div>\n          <div class="col-6">\n            <mat-input-container class="full-width">\n              <input matInput placeholder="Country" readonly [value]="data.paymentTransfer.chargeInfo.wireDetails.country">\n            </mat-input-container>\n          </div>\n        </div>\n\n        <div class="form-group row">\n          <div class="col-6">\n            <mat-input-container class="full-width">\n              <input matInput placeholder="Beneficiary" readonly [value]="data.paymentTransfer.chargeInfo.wireDetails.beneficiary">\n            </mat-input-container>\n          </div>\n          <div class="col-6">\n            <mat-input-container class="full-width">\n              <textarea matInput placeholder="Beneficiary address" readonly rows="3" [value]="dataBeneficiaryAddress"></textarea>\n            </mat-input-container>\n          </div>\n        </div>\n      </div>\n    </div>\n  </article>\n\n</div>'},1634:function(n,t){n.exports=' <div class="container-fluid no-breadcrumbs">\n\n  <article class="article">\n    <div>\n      <button mat-icon-button [routerLink]="[\'/app/page/provider\']" style="vertical-align:super">\n        <mat-icon class="material-icons">arrow_back</mat-icon>\n      </button>\n      <h2 class="article-title" style="display:inline-block">Create provider</h2>\n    </div>\n    <div class="box box-default">\n      <div class="box-body">\n\n        <div class="callout callout-danger no-margin-top" *ngIf="uiError">\n          There was an error with your request.\n          <br>\n          Please try again later or contact support.\n        </div>\n\n        <div class="callout callout-info no-margin-top" *ngIf="!uiError">\n          Fields with <span style="color:red">*</span> are mandatory.\n          <br>\n          Submit button will be active only when all fields are valid.\n        </div>\n\n        <form #f="ngForm" (ngSubmit)="submit()">\n          <div class="form-group row">\n            <div class="col-3">\n              <mat-input-container class="full-width">\n                <mat-select name="type"\n                  placeholder="Beneficiary type"\n                  [(ngModel)]="formBeneficiaryType"\n                  (ngModelChange)="formBeneficiaryTypeChanged($event)"\n                  [disabled]="uiWaiting"\n                  required>\n                  <mat-option value="INDIVIDUAL">Individual</mat-option>\n                  <mat-option value="CORPORATE">Corporate</mat-option>\n                </mat-select>\n              </mat-input-container>\n            </div>\n            <div class="col-4">\n              <mat-input-container class="full-width">\n                <input name="accountNumber"\n                  placeholder="Account number"\n                  matInput\n                  [(ngModel)]="formAccountNumber"\n                  [disabled]="uiWaiting"\n                  required>\n              </mat-input-container>\n            </div>\n            <div class="col-5">\n              <mat-input-container class="full-width">\n                <input name="clabe"\n                  placeholder="CLABE"\n                  matInput\n                  [(ngModel)]="formClabe"\n                  [disabled]="uiWaiting"\n                  required>\n              </mat-input-container>\n            </div>\n          </div>\n\n          <div class="form-group row" *ngIf="formBeneficiaryType == \'INDIVIDUAL\'">\n            <div class="col-6">\n              <mat-input-container class="full-width">\n                <input name="firstName"\n                  placeholder="First name on account"\n                  matInput\n                  [(ngModel)]="formFirstName"\n                  [disabled]="uiWaiting"\n                  required>\n              </mat-input-container>\n            </div>\n            <div class="col-6">\n              <mat-input-container class="full-width">\n                <input name="lastName"\n                  placeholder="Last name on account"\n                  matInput\n                  [(ngModel)]="formLastName"\n                  [disabled]="uiWaiting"\n                  required>\n              </mat-input-container>\n            </div>\n          </div>\n\n          <div class="form-group row" *ngIf="formBeneficiaryType == \'CORPORATE\'">\n            <div class="col-12">\n              <mat-input-container class="full-width">\n                <input name="beneficiaryName"\n                  placeholder="Name on account"\n                  matInput\n                  [(ngModel)]="formBeneficiaryName"\n                  [disabled]="uiWaiting"\n                  required>\n              </mat-input-container>\n            </div>\n          </div>\n\n          <div class="form-group row">\n            <div class="col-6">\n              <button mat-button disabled *ngIf="uiWaiting">Creating provider...</button>\n            </div>\n            <div class="col-6 text-right">\n              <button [disabled]="!f.valid || uiWaiting" color="primary" mat-raised-button>Create provider</button>\n            </div>\n          </div>\n        </form>\n      </div>\n      <mat-progress-bar mode="indeterminate" *ngIf="uiWaiting"></mat-progress-bar>\n    </div>\n  </article>\n</div>'},1635:function(n,t){n.exports=' <div class="container-fluid no-breadcrumbs">\n\n  <article class="article">\n    <div>\n      <button mat-icon-button [routerLink]="[\'/app/page/provider/view/\'+dataId]" style="vertical-align:super">\n        <mat-icon class="material-icons">close</mat-icon>\n      </button>\n      <h2 class="article-title" style="display:inline-block">Update provider</h2>\n    </div>\n    <div class="box box-default">\n      <div class="box-body">\n\n        <div class="callout callout-danger no-margin-top" *ngIf="uiError">\n          There was an error with your request.\n          <br>\n          Please try again later or contact support.\n        </div>\n\n        <div class="callout callout-info no-margin-top" *ngIf="!uiError">\n          Fields with <span style="color:red">*</span> are mandatory.\n          <br>\n          Submit button will be active only when all fields are valid.\n        </div>\n\n        <form #f="ngForm" (ngSubmit)="submit()">\n          <div class="form-group row">\n            <div class="col-3">\n              <mat-input-container class="full-width">\n                <mat-select name="type"\n                  placeholder="Beneficiary type"\n                  [(ngModel)]="formBeneficiaryType"\n                  [disabled]="uiWaiting"\n                  required>\n                  <mat-option value="INDIVIDUAL">Individual</mat-option>\n                  <mat-option value="CORPORATE">Corporate</mat-option>\n                </mat-select>\n              </mat-input-container>\n            </div>\n            <div class="col-4">\n              <mat-input-container class="full-width">\n                <input name="accountNumber"\n                  placeholder="Account number"\n                  matInput\n                  [(ngModel)]="formAccountNumber"\n                  [disabled]="uiWaiting"\n                  required>\n              </mat-input-container>\n            </div>\n            <div class="col-5">\n              <mat-input-container class="full-width">\n                <input name="clabe"\n                  placeholder="CLABE"\n                  matInput\n                  [(ngModel)]="formClabe"\n                  [disabled]="uiWaiting"\n                  required>\n              </mat-input-container>\n            </div>\n          </div>\n\n          <div class="form-group row" *ngIf="formBeneficiaryType == \'INDIVIDUAL\'">\n            <div class="col-6">\n              <mat-input-container class="full-width">\n                <input name="firstName"\n                  placeholder="First name on account"\n                  matInput\n                  [(ngModel)]="formFirstName"\n                  [disabled]="uiWaiting"\n                  required>\n              </mat-input-container>\n            </div>\n            <div class="col-6">\n              <mat-input-container class="full-width">\n                <input name="lastName"\n                  placeholder="Last name on account"\n                  matInput\n                  [(ngModel)]="formLastName"\n                  [disabled]="uiWaiting"\n                  required>\n              </mat-input-container>\n            </div>\n          </div>\n\n          <div class="form-group row" *ngIf="formBeneficiaryType == \'CORPORATE\'">\n            <div class="col-12">\n              <mat-input-container class="full-width">\n                <input name="beneficiaryName"\n                  placeholder="Name on account"\n                  matInput\n                  [(ngModel)]="formBeneficiaryName"\n                  [disabled]="uiWaiting"\n                  required>\n              </mat-input-container>\n            </div>\n          </div>\n\n          <div class="form-group row">\n            <div class="col-6">\n              <button mat-button disabled *ngIf="uiWaiting">Updating provider...</button>\n            </div>\n            <div class="col-6 text-right">\n              <button [disabled]="!f.valid || uiWaiting" color="primary" mat-raised-button>Update provider</button>\n            </div>\n          </div>\n        </form>\n      </div>\n      <mat-progress-bar mode="indeterminate" *ngIf="uiWaiting"></mat-progress-bar>\n    </div>\n  </article>\n</div>'},1636:function(n,t){n.exports=' <div class="container-fluid no-breadcrumbs page-users">\n\n  <article class="article">\n    <div class="list-header">\n      <h2 class="article-title" flex>Providers</h2>\n      <button mat-fab color="primary" [matMenuTriggerFor]="menu">\n        <mat-icon class="material-icons">add</mat-icon>\n      </button>\n      <mat-menu #menu="matMenu" class="list-header-menu" x-position="after" y-position="below" overlapTrigger="false">\n        <mat-list>\n          <mat-list-item (click)="addBusiness()">\n            <mat-icon mat-list-icon>business</mat-icon>\n            <h4 mat-line>Business</h4>\n          </mat-list-item>\n          <mat-list-item (click)="addIndividual()">\n            <mat-icon mat-list-icon>face</mat-icon>\n            <h4 mat-line>Individual</h4>\n          </mat-list-item>\n        </mat-list>\n      </mat-menu>\n    </div>\n    <div class="box box-default table-box mdl-shadow--2dp">\n      <table class="mdl-data-table">\n        <thead>\n          <tr>\n            <th style="width:67px"></th>\n            <th class="mdl-data-table__cell--non-numeric">Name</th>\n            <th class="mdl-data-table__cell--non-numeric">Type</th>\n            <th></th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor="let provider of dataProviders">\n            <td>\n              <i class="material-icons" *ngIf="provider.beneficiaryType == \'CORPORATE\'">business</i>\n              <i class="material-icons" *ngIf="provider.beneficiaryType == \'INDIVIDUAL\'">face</i>\n            </td>\n            <td class="mdl-data-table__cell--non-numeric">{{provider.name}}</td>\n            <td class="mdl-data-table__cell--non-numeric">\n              <span *ngIf="provider.beneficiaryType == \'CORPORATE\'">Business</span>\n              <span *ngIf="provider.beneficiaryType == \'INDIVIDUAL\'">Individual</span>\n            </td>\n            <td>\n              <a [routerLink]="[\'/app/page/provider/view/\'+provider.id]">OPEN</a>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </article>\n\n</div>'},1637:function(n,t){n.exports=' <div class="container-fluid no-breadcrumbs">\n\n  <article class="article">\n    <div class="list-header">\n      <button mat-icon-button [routerLink]="[\'/app/page/provider\']" style="vertical-align:super">\n        <mat-icon class="material-icons">arrow_back</mat-icon>\n      </button>\n      <h2 class="article-title" style="display:inline-block">Provider</h2>\n      <button mat-fab color="primary" [matMenuTriggerFor]="menu">\n        <mat-icon class="material-icons">more_vert</mat-icon>\n      </button>\n      <mat-menu #menu="matMenu" class="list-header-menu" x-position="after" y-position="below" overlapTrigger="false">\n        <mat-list>\n          <mat-list-item [routerLink]="[\'/app/page/provider/edit/\'+dataId]">\n            <mat-icon mat-list-icon>edit</mat-icon>\n            <h4 mat-line>Edit</h4>\n          </mat-list-item>\n        </mat-list>\n      </mat-menu>\n    </div>\n    <div class="box box-default">\n      <div class="box-body">\n\n        <form *ngIf="data">\n          <div class="form-group row">\n            <div class="col-3">\n              <mat-input-container class="full-width">\n                <mat-select name="type"\n                  placeholder="Beneficiary type"\n                  [(ngModel)]="data.beneficiaryType"\n                  disabled>\n                  <mat-option value="INDIVIDUAL">Individual</mat-option>\n                  <mat-option value="CORPORATE">Corporate</mat-option>\n                </mat-select>\n              </mat-input-container>\n            </div>\n            <div class="col-4">\n              <mat-input-container class="full-width">\n                <input name="accountNumber"\n                  placeholder="Account number"\n                  matInput\n                  [(ngModel)]="data.accountNumber"\n                  readonly>\n              </mat-input-container>\n            </div>\n            <div class="col-5">\n              <mat-input-container class="full-width">\n                <input name="clabe"\n                  placeholder="CLABE"\n                  matInput\n                  [(ngModel)]="data.clabe"\n                  readonly>\n              </mat-input-container>\n            </div>\n          </div>\n\n          <div class="form-group row" *ngIf="data.beneficiaryType == \'INDIVIDUAL\'">\n            <div class="col-6">\n              <mat-input-container class="full-width">\n                <input name="firstName"\n                  placeholder="First name on account"\n                  matInput\n                  [(ngModel)]="data.firstName"\n                  readonly>\n              </mat-input-container>\n            </div>\n            <div class="col-6">\n              <mat-input-container class="full-width">\n                <input name="lastName"\n                  placeholder="Last name on account"\n                  matInput\n                  [(ngModel)]="data.lastName"\n                  readonly>\n              </mat-input-container>\n            </div>\n          </div>\n\n          <div class="form-group row" *ngIf="data.beneficiaryType == \'CORPORATE\'">\n            <div class="col-12">\n              <mat-input-container class="full-width">\n                <input name="beneficiaryName"\n                  placeholder="Name on account"\n                  matInput\n                  [(ngModel)]="data.beneficiaryName"\n                  readonly>\n              </mat-input-container>\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n  </article>\n</div>'},1638:function(n,t){n.exports=' <div class="container-fluid no-breadcrumbs page-users">\n\n  <article class="article">\n    <div class="row">\n      <div class="col-6">\n        <h2 class="article-title">Users</h2>\n      </div>\n      <div class="col-6 text-right">\n        <button mat-fab color="primary" [routerLink]="[\'/app/page/users/add\']" style="position:relative;top:16px;right:8px;z-index:1">\n          <mat-icon class="material-icons">add</mat-icon>\n        </button>\n      </div>\n    </div>\n    <div class="box box-default table-box mdl-shadow--2dp">\n      <table class="mdl-data-table">\n        <thead>\n          <tr>\n            <th class="mdl-data-table__cell--non-numeric">Id</th>\n            <th class="mdl-data-table__cell--non-numeric">Email</th>\n            <th class="mdl-data-table__cell--non-numeric">Created at</th>\n            <th></th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor="let user of userList">\n            <td class="mdl-data-table__cell--non-numeric">{{user.id}}</td>\n            <td class="mdl-data-table__cell--non-numeric">{{user.email}}</td>\n            <td class="mdl-data-table__cell--non-numeric">{{user.createdAt | date:\'medium\'}}</td>\n            <td>\n              <a [routerLink]="[\'/app/page/users/view/\'+user.id]">OPEN</a>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </article>\n\n</div>'},1639:function(n,t){n.exports=' <div class="container-fluid no-breadcrumbs">\n\n  <article class="article">\n    <div>\n      <button mat-icon-button [routerLink]="[\'/app/page/users\']" style="vertical-align:super">\n        <mat-icon class="material-icons">arrow_back</mat-icon>\n      </button>\n      <h2 class="article-title" style="display:inline-block">Create user</h2>\n    </div>\n    <div class="box box-default">\n      <div class="box-body">\n        <form (ngSubmit)="submit()">\n\n          <div class="form-group row">\n            <div class="col-6">\n              <mat-input-container class="full-width mat-icon-left">\n                <mat-icon class="material-icons">email</mat-icon>\n                <input name="email" matInput [(ngModel)]="formEmail" placeholder="Email">\n              </mat-input-container>\n            </div>\n            <div class="col-6">\n              <mat-input-container class="full-width mat-icon-left">\n                <mat-icon class="material-icons">vpn_key</mat-icon>\n                <input name="password" matInput [(ngModel)]="formPassword" placeholder="Password" type="password">\n              </mat-input-container>\n            </div>\n          </div>\n\n          <div class="form-group row">\n            <div class="col-12">\n              <mat-input-container class="full-width mat-icon-left">\n                <mat-icon class="material-icons">business</mat-icon>\n                <mat-select name="company" [(ngModel)]="formCompany" placeholder="Company">\n                  <mat-option *ngFor="let company of dataCompanies" [value]="company.id">\n                    {{company.name}}\n                  </mat-option>\n                </mat-select>\n              </mat-input-container>\n            </div>\n          </div>\n\n          <div class="form-group row">\n            <div class="col-12 text-right">\n              <button color="primary" mat-raised-button>Create user</button>\n            </div>\n          </div>\n\n        </form>\n      </div>\n    </div>\n  </article>\n\n</div>'},1640:function(n,t){n.exports=' <div class="container-fluid no-breadcrumbs">\n\n  <article class="article">\n    <div style="position:relative">\n      <button mat-icon-button [routerLink]="[\'/app/page/users\']" style="vertical-align:super">\n        <mat-icon class="material-icons">arrow_back</mat-icon>\n      </button>\n      <h2 class="article-title" flex style="display:inline-block">Create user</h2>\n      <button mat-fab [matMenuTriggerFor]="menu" style="position:absolute;top:16px;right:8px;z-index:1">\n        <mat-icon class="material-icons">more_vert</mat-icon>\n      </button>\n      <mat-menu #menu="matMenu" x-position="after" y-position="below" overlapTrigger="false">\n        <mat-list>\n          <mat-list-item color="warn" (click)="deleteUser()" style="cursor:pointer">\n            <mat-icon mat-list-icon color="warn">delete</mat-icon>\n            <h4 mat-line class="text-warn">Delete user</h4>\n          </mat-list-item>\n        </mat-list>\n      </mat-menu>\n    </div>\n    <div class="box box-default">\n      <div class="box-body">\n        <form>\n\n          <div class="form-group row">\n            <div class="col-6">\n              <mat-input-container class="full-width mat-icon-left">\n                <mat-icon class="material-icons">email</mat-icon>\n                <input name="email" matInput [(ngModel)]="email" readonly placeholder="Email">\n              </mat-input-container>\n            </div>\n            <div class="col-6">\n              <mat-input-container class="full-width mat-icon-left">\n                <mat-icon class="material-icons">vpn_key</mat-icon>\n                <input name="password" matInput [(ngModel)]="password" readonly placeholder="Password" type="password">\n              </mat-input-container>\n            </div>\n          </div>\n\n        </form>\n      </div>\n    </div>\n  </article>\n\n</div>'},1641:function(n,t){n.exports='<h2 md-dialog-title>Transfer deposit to wallet</h2>\n<div md-dialog-content>\n  <div class="text-center" *ngIf="!quote">\n    <p>Waiting for quote...</p>\n    <mat-progress-spinner mode="indeterminate" style="display:inline-block"></mat-progress-spinner>\n  </div>\n  <div *ngIf="quote&&!quote.confirm">\n    <div class="box box-transparent">\n      <div class="box-header no-padding-h text-center">{{quote.sw.desc}}</div>\n      <div class="box-body no-padding-h">\n        <div class="box box-default table-box mdl-shadow--2dp">\n          <table class="mdl-data-table">\n            <tbody>\n              <tr class="bg-color-info">\n                <td class="mdl-data-table__cell--non-numeric">Exchange rate</td>\n                <td>{{quote.sw.exchangeRate | currency:data.destCurrency:\'symbol-narrow\':\'1.2-2\'}}</td>\n              </tr>\n              <tr>\n                <td class="mdl-data-table__cell--non-numeric">Estimated arrival</td>\n                <td>{{quote.sw.estimatedArrival | date:\'medium\'}}</td>\n              </tr>\n              <tr class="bg-color-info">\n                <td class="mdl-data-table__cell--non-numeric">Total fees</td>\n                <td>{{quote.sw.totalFees | currency:\'USD\':\'symbol-narrow\':\'1.2-2\'}}</td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class="text-center" *ngIf="quote&&quote.confirm&&!quote.confirm.sw">\n    <p>Waiting for confirmation...</p>\n    <mat-progress-spinner mode="indeterminate" style="display:inline-block"></mat-progress-spinner>\n  </div>\n  <div class="text-center" *ngIf="quote&&quote.confirm&&quote.confirm.sw">\n    <p>{{quote.confirm.sw.desc}}</p>\n  </div>\n</div>\n<div md-dialog-actions *ngIf="quote" class="text-right">\n  <button mat-raised-button (click)="confirm()" *ngIf="!quote.confirm" color="primary">Confirm</button>\n  <button mat-button mat-dialog-close *ngIf="!quote.confirm">Cancel</button>\n  <button mat-button mat-dialog-close *ngIf="quote.confirm&&quote.confirm.sw">Close</button>\n</div>'},1642:function(n,t){n.exports=' <div class="container-fluid no-breadcrumbs page-users">\n\n  <div class="box box-default">\n    <div class="box-header">Deposit to wallet</div>\n    <div class="box-divider"></div>\n    <div class="box-body">\n      <form (ngSubmit)="submit()">\n        <div class="form-group row">\n          <div class="col-4">\n            <mat-input-container class="full-width">\n              <input name="amount" [(ngModel)]="formAmount" type="number" step="any" min="1" matInput placeholder="Amount">\n            </mat-input-container>\n          </div>\n          <div class="col-4">\n            <mat-form-field class="full-width">\n              <mat-select name="destination" [(ngModel)]="formDestination" placeholder="Company">\n                <mat-option *ngFor="let company of dataCompanies" [value]="company.id">{{company.name}}</mat-option>\n              </mat-select>\n            </mat-form-field>\n          </div>\n          <div class="col-4">\n            <button type="submit" mat-raised-button color="accent" class="full-width">Continue</button>\n          </div>\n        </div>\n      </form> \n    </div>\n  </div>\n\n</div>'}});
//# sourceMappingURL=0.c53b756448111eb3856f.chunk.js.map